/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package imrcp.store;

import java.util.ArrayList;
import java.util.Collections;

/**
 * FileCache that manages alert csv files generated by {@link imrcp.comp.Alerts}
 * @author Federal Highway Administration
 */
public class AlertsStore extends CsvStore
{
	/**
	 * Determines the files that match the query and calls {@link CsvStore#getDataFromFile(imrcp.store.ImrcpResultSet, int, long, long, int, int, int, int, long, imrcp.store.CsvWrapper)}
	 * for each of those files
	 */
	@Override
	public void getData(ImrcpResultSet oReturn, int nType, long lStartTime, long lEndTime,
	   int nStartLat, int nEndLat, int nStartLon, int nEndLon, long lRefTime)
	{
		ArrayList<CsvWrapper> oChecked = new ArrayList();
		long lObsTime = lRefTime - m_nFileFrequency; // start 1 file frequency back to ensure any obs in the previous file that are valid get found
		while (lObsTime < lEndTime)
		{
			CsvWrapper oFile = (CsvWrapper) getFile(lObsTime, lRefTime);
			if (oFile != null)
			{
				int nIndex = Collections.binarySearch(oChecked, oFile, FILENAMECOMP);
				if (nIndex < 0)
				{
					getDataFromFile(oReturn, nType, lStartTime, lEndTime, nStartLat, nEndLat, nStartLon, nEndLon, lRefTime, oFile);
					oChecked.add(~nIndex, oFile);
				}
			}
			lObsTime += m_nFileFrequency;
		}

		CsvWrapper oFile = (CsvWrapper) getFile(lObsTime, lRefTime); // always do one more file
		if (oFile != null)
			getDataFromFile(oReturn, nType, lStartTime, lEndTime, nStartLat, nEndLat, nStartLon, nEndLon, lRefTime, oFile);
	}
	
	
	/**
	 * @return a new {@link AlertsCsvWrapper} with the configured observation 
	 * types
	 */
	@Override
	protected FileWrapper getNewFileWrapper()
	{
		return new AlertsCsvWrapper(m_nSubObsTypes);
	}
}
